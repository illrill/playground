name: set-commit-status

description: Set Github commit status for a commit

inputs:
  token:
    required: false
    default: ${{ github.token }}
  status:
    required: false
    default: 'pending'
  repository:
    required: false
    default: ${{ github.repository }}
  sha:
    required: false
    default: ${{ github.sha }}
  target-url: 
    required: false
    default: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
  description:
    required: false
    default: 'This check has started...'
  context: 
    required: false
    default: ${{ github.workflow }} / ${{ github.job }}

runs:
  using: composite
  steps:
    - name: Set commit status
      env:
        INPUT_GITHUB_TOKEN: ${{ inputs.token }}
        INPUT_SHA: ${{ inputs.sha }}
        INPUT_STATUS: ${{ inputs.status }}
        INPUT_TARGET_URL: ${{ inputs.target-url }}
        INPUT_DESCRIPTION: ${{ inputs.description }}
        INPUT_CONTEXT: ${{ inputs.context }}
        INPUT_REPOSITORY: ${{ inputs.repository }}
      shell: bash
      run: |
        # Check if the provided status is valid
        if [[ ! "error failure cancelled pending success" =~ (^|[[:space:]])"$INPUT_STATUS"($|[[:space:]]) ]]; then
          echo "Invalid status. Must be one of 'error', 'failure', 'cancelled', 'pending', 'success'."
          exit 1
        fi

        # Capitalize the description
        _description="${INPUT_DESCRIPTION^}"
        
        # Translate "cancelled" status to "failure"
        [ "$INPUT_STATUS" == "cancelled" ] && INPUT_STATUS="failure"
        
        # Set the commit status using the Github API
        gh api repos/$INPUT_REPOSITORY/statuses/$INPUT_SHA \
          -X POST \
          -f state="$INPUT_STATUS" \
          -f description="$_description" \
          -f target_url="$INPUT_TARGET_URL" \
          -f context="$INPUT_CONTEXT"
